worker_processes 1;

events {
    worker_connections  1024;
}


http {
    lua_package_path "$prefix/conf/?.lua;;";

    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;
    gzip  on;

    server {
        listen       8080;
        server_name  localhost;

        charset utf-8;

        location / {
            root   /home/rtfeldman/code/nginx-postgres-example/static;
            index  index.html;
        }

        location = /api/users {
            default_type 'application/json';

            content_by_lua_block {
              local db = require("db")

              ngx.req.read_body()
              json, err, partial, num_q = db.select("register_user", ngx.req.get_body_data())

              if json == nil then
                ngx.status = 422

                return ngx.exit(ngx.ERROR)
              else
                ngx.status = 201
                ngx.print(json)

                return ngx.exit(ngx.OK)
              end
            }
        }

        location = /api/users/login {
            default_type 'application/json';

            content_by_lua_block {
              local db = require("db")

              ngx.req.read_body()
              json, err, partial, num_q = db.select("login", ngx.req.get_body_data())

              if json == nil then
                ngx.status = 403

                return ngx.exit(ngx.ERROR)
              else
                ngx.status = 200
                ngx.print(json)

                return ngx.exit(ngx.OK)
              end
            }
        }
    }
}
